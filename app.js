//Code Generated By Express Generator.
//Including various middleware.
var express = require('express');
var path = require('path');
var logger = require('morgan');
var cookieParser = require('cookie-parser');
var bodyParser = require('body-parser');

var expressSanitized = require('express-sanitized');
var helmet = require('helmet');

var backend = require('./routes/backend');/*
Middleware for handling the session
and storing the session variables.
The setup done using the instructions from
https://www.npmjs.com/package/express-session
*/

var session = require('express-session');

/*
Middleware for using the flash functionality
which could be used to define a flash message along with
the response. The setup done from
https://www.npmjs.com/package/express-flash
*/
//var flash = require('express-flash');

/*
Currently all the routes
are defined in the single index file.
*/
var app = express();

/*
Package to generate tokens. We use this to generate
the Ids, and tokens for our users/tokens/posts object.
The installation and setup done as per
https://www.npmjs.com/package/rand-token
*/
app.randtoken = require('rand-token');


/*
Whenever a user logs in, a token is created and
saved agaist the user name. This is how the user
is mapped from every request.
*/
app.locals.token = {};

/*
Middleware to do the authentication for all requests
We just checks if a token exists and the session is maintained.
if not we redirect to login.
*/


// view engine setup
app.set('views', path.join(__dirname, 'views'));

app.use(session({
    secret: 'topsecret',
    resave: true,
    saveUninitialized: true
}));
app.use(logger('dev'));
// app.use(helmet);
app.use(bodyParser.urlencoded({ extended: false }));
// app.use(expressSanitized);
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));

app.use('/backend', backend);
app.use(helmet.xssFilter());
// catch 404 and forward to error handler
app.use(function(req, res, next) {
    var err = new Error('Not Found');
    err.status = 404;
    next(err);
});

// error handler
app.use(function(err, req, res, next) {
    // set locals, only providing error in development
    res.locals.message = req.app.get('env') === 'development' ?
        err.message : "Buggy Code Found";
    res.locals.error = req.app.get('env') === 'development' ? err : {};

    // render the error page
    res.status(err.status || 500);
});

//Setting the Environment to Production. Dev by default.
// app.set('env', 'production');



module.exports = app;
